#!/bin/zsh

#
# MY
# CUSTOM 
# FUNCTIONS 
#            

# randomize color prompt
function rand_prompt() {
  PROMPT="%F{$((1+RANDOM%255))}>%f "
}

# randomize background color
function rand_bg() {
  convert -size 100x100 xc:#990000 $BG_PATH #generate image
  #sqlite3 ~/Library/Application\ Support/Dock/desktoppicture.db "update data set value = '$BG_PATH'" && killall Dock 
}

function fill() {
  python3 -c "import shutil; print('$1'*shutil.get_terminal_size().columns)"
}

# indent a multiline command
function indent() {
  while read spo; do
    echo "  $spo";
  done
}

# set terminal theme
function theme() {
  theme_dir=~/.config/kitty/kitty-themes/themes
  # aquire theme if new
  if [ ! -f "$theme_dir/$1.conf" ]; then
    theme_url=https://raw.githubusercontent.com/dexpota/kitty-themes/master/themes/$1.conf
    wget "$theme_url" -P $theme_dir
  fi
  # link the loaded theme
  ln -s ~/.config/kitty/kitty-themes/themes/Floraverse.conf ~/.config/kitty/theme.conf
}

# git quickly
function backup() {
  git add .
  git commit -m "$@"
  git push
}

function browse() {
  if [ -z $1 ]; then
    echo "usage: browse <url>"
    return
  fi
  open -a firefox -g "$1"
  open -a firefox # focus the window
}

# search the internet
function go() {
  url=$(echo "$@" | jq -sRr @uri)
  url="https://www.google.com/search?q=$url"
  browse $url
}

function help() {
  if [ -z "$@" ]; then
    echo "usage: help <script>"
    return
  fi
  cat "$@" | grep "^function" | sed s/function\ //g | sed s/\(\)\ \{//g
}

# change [directory]
function c() {
  if [ -z "$@" ]; then
    ls --color .
  else 
    cd $@
    pwd
    pwd > $LWD_DIR # store last working directory
    rand_prompt # indicate change with color
    if [ -f "$(pwd)/$C_DIR" ]; then # execute directory script
      . ./"$C_DIR"
    fi
  fi
}

# start at last working directory
function back() {
  c $(cat $LWD_DIR)
}

# navigate with ranger
function nav() {
  bash -c "ranger $@ --choosedir=$LWD_DIR"
  back
}
