#!/bin/sh
self="$0"

# construct a color
function color() {
  style="$1;" # 0-8
  notnull "$2" set fg="$(($2+30));" # 0-7
  notnull "$3" set bg="$(($3+40))" # 0-7
  echo -en "\033[$style$fg${bg}m"
}

# custom shell agnostic color aliases
export C_RESET=$(color 0 0)

# copied from linux kernal log levels
export C_DEBUG=$(color 1 3 4)
export C_INFO=$(color 1 3 2)
export C_NOTICE=$(color 7 3 3)
export C_WARN=$(color 1 3 6)
export C_ERR=$(color 1 3 1)
export C_CRIT=$(color 7 3 6)
export C_ALERT=$(color 7 3 5)
export C_EMERG=$(color 7 3 1)

# list all available color constants
function COLORS() {
  grep "^export C_" $self |
    sed "s/^export\ //g" |
    sed "s/=.*$//g" |
    xargs python3 -c '
import sys, os
reset = "\033[0m" 
text = []
for color in sys.argv[1:]:
  if color:
    code = os.environ[color]
    str = f"{code}{color}{reset}"
    text.append(str)
print(", ".join(text))'
}

# print out your color palet
function colors() {
  for fg in {0..7}; do
    for bg in {0..7}; do
      for style in {0..8}; do
        c=$(color $style $fg $bg)
        echo -ne "$c($style,$fg,$bg)$C_RESET"
      done;
      echo;
    done;
  done;
}
