#!/bin/sh
self="$0"

# construct a color
function color() {
  fg="$(($1+30));" # 0-7
  if [ ! -z "$2" ]; then bg="$(($2+40));"; fi # 0-7
  if [ ! -z "$3" ]; then style="$3;"; fi      # 0-8
  echo "$style$fg$bg"
  echo -en "\033[$style$fg${bg}m"
}

# custom shell agnostic color aliases
export C_RESET=$(color 0)

# copied from linux kernal log levels
export C_DEBUG=$(color 4 0)
export C_INFO=$(color 32 0)
export C_NOTICE=$(color 30 2)
export C_WARN=$(color 36 0)
export C_ERR=$(color 35 0)
export C_CRIT=$(color 30 6)
export C_ALERT=$(color 31 0)
export C_EMERG=$(color 37 1)

# list all available color constants
function COLORS() {
  grep "^export C_" $self |
    sed "s/^export\ //g" |
    sed "s/=.*$//g" |
    xargs python3 -c '
import sys, os
reset = "\033[0m" 
for color in sys.argv[1:]:
  if color:
    code = os.environ[color]
    str = f"{code}{color}{reset}"
    print(str, end=", ")
print'
    #indent "-"
}

# print out your color palet
function colors() {
  for fg in {0..7}; do
    for bg in {0..7}; do
      for style in {0..8}; do
        c=$(color $fg $bg $style)
        echo -ne "$c($fg,$bg,$style)$C_RESET"
      done;
      echo;
    done;
  done;
}
